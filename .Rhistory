source('~/GitHub/PathwayMining/fit_comparison.R')
maxDiff_dist(sample_og[,2])
maxDiff_dist(sample_og[,2:3])
source('~/GitHub/PathwayMining/fit_comparison.R')
maxDiff_dist(sample_og[,2:3])
source('~/GitHub/PathwayMining/fit_comparison.R')
maxDiff_dist(sample_og[,2:3])
hist(sample_og[,1])
hist(rescale_sample(sample_og[,1]))
hist(rescale_sample(sample_og)[,1])
hist(rescale_sample(sample_og)[,2])
source('~/GitHub/PathwayMining/fit_comparison.R')
source('~/GitHub/PathwayMining/fit_comparison.R')
source('~/GitHub/PathwayMining/fit_comparison_run.R')
source('~/GitHub/PathwayMining/fit_comparison.R')
maxDiff <- maxDiff_dist(sample_og)
maxDiff[,1]
max(maxDiff[,1])
max(maxDiff[,2])
maxDiff[,2]
mean(maxDiff[,1])
mean(maxDiff[,2])
mean(maxDiff[,3])
mean(maxDiff[,4])
mean(maxDiff[,5])
1/10000
for (i in 1:ncol(maxDiff)){}
for (i in 1:ncol(maxDiff)){print(mean(maxDiff[,i]))}
source('~/GitHub/PathwayMining/fit_comparison_run.R')
source('~/GitHub/PathwayMining/fit_comparison_run.R')
source('~/GitHub/PathwayMining/fit_comparison_run.R')
source('~/GitHub/PathwayMining/fit_comparison_run.R')
for (i in 1:ncol(maxDiff)){print(max(maxDiff[,i]))}
source('~/GitHub/PathwayMining/fit_comparison_run.R')
source('~/GitHub/PathwayMining/fit_comparison_run.R')
source('~/GitHub/PathwayMining/fit_comparison_run.R')
source('~/GitHub/PathwayMining/fit_comparison_run.R')
source('~/GitHub/PathwayMining/fit_comparison_run.R')
source('~/GitHub/PathwayMining/fit_comparison_run.R')
source('~/GitHub/PathwayMining/fit_comparison_run.R')
source('~/GitHub/PathwayMining/fit_comparison_run.R')
for (i in 1:ncol(maxDiff)){print(max(maxDiff[,i]))}
for (i in 1:ncol(maxDiff)){print(max(maxDiff2[,i]) - max(maxDiff[,i]))}
for (i in 1:ncol(maxDiff)){print(max(maxDiff4[,i]) - max(maxDiff[,i]))}
length(which(max(maxDiff4[,i]) - max(maxDiff[,i]) > 0))
length(which(max(maxDiff4[,i]) - max(maxDiff[,i]) < 0))
length(which([max(maxDiff4[,i]) - max(maxDiff[,i])] < 0))
length(which((max(maxDiff4[,i]) - max(maxDiff[,i])) < 0))
length(which((max(maxDiff4[,i]) - max(maxDiff[,i])) > 0))
length(which((max(maxDiff4) - max(maxDiff)) > 0))
source('~/GitHub/PathwayMining/fit_comparison_run.R')
for (i in 1:ncol(maxDiff)){print(max(maxDiff4[,i]) - max(maxDiff[,i]))}
sapply(maxDiff4, max, na.rm = TRUE)
mapply(maxDiff4, max, na.rm = TRUE)
tapply(maxDiff4, max, na.rm = TRUE)
apply(maxDiff4, max, na.rm = TRUE)
apply(maxDiff4,2,max)
apply(maxDiff4,2,max) - apply(maxDiff, 2, max)
length(apply(maxDiff4,2,max) - apply(maxDiff, 2, max) > 0)
length(which(apply(maxDiff4,2,max) - apply(maxDiff, 2, max) > 0))
length(which(apply(maxDiff4,2,max) - apply(maxDiff, 2, max) < 0))
length(which(apply(maxDiff3,2,max) - apply(maxDiff, 2, max) < 0))
length(which(apply(maxDiff2,2,max) - apply(maxDiff, 2, max) < 0))
source('~/GitHub/PathwayMining/fit_comparison_run.R')
source('~/GitHub/PathwayMining/fit_comparison_run.R')
length(which(apply(maxDiff2,2,max) - apply(maxDiff, 2, max) < 0))
length(which(apply(maxDiff3,2,max) - apply(maxDiff, 2, max) < 0))
source('~/GitHub/PathwayMining/fit_comparison_run.R')
length(which(apply(maxDiff3,2,max) - apply(maxDiff, 2, max) < 0))
length(which(apply(maxDiff4,2,max) - apply(maxDiff, 2, max) < 0))
length(which(apply(maxDiff2,2,max) - apply(maxDiff1, 2, max) < 0))
length(which(apply(maxDiff3,2,max) - apply(maxDiff1, 2, max) < 0))
length(which(apply(maxDiff4,2,max) - apply(maxDiff1, 2, max) < 0))
length(which(apply(maxDiff3,2,max) - apply(maxDiff2, 2, max) < 0))
length(which(apply(maxDiff4,2,max) - apply(maxDiff2, 2, max) < 0))
length(which(apply(maxDiff4,2,max) - apply(maxDiff3, 2, max) < 0))
length(which(apply(maxDiff4,2,max) - apply(maxDiff1, 2, max) < 0))
apply(maxDiff1,2,max)
apply(maxDiff4,2,max)
mean(apply(maxDiff4,2,max))
mean(apply(maxDiff1,2,max))
mean(apply(maxDiff2,2,max))
mean(apply(maxDiff3,2,max))
mean(apply(maxDiff4,2,max))
cor(sample_og[,1], sample_og[,35])
source('~/GitHub/PathwayMining/fit_comparison.R')
source('~/GitHub/PathwayMining/fit_comparison.R')
coupling_og <- flux_coupling_cor(rescale_sample(sample_og))
warnings()
return_couples(coupling_og)
coupling_og
dim(coupling_og)
dimnames(coupling_og)
dimnames(coupling_og)[1]
dimnames(coupling_og)[[1]]
return_couples(coupling_og)
coupling_og
source('~/GitHub/PathwayMining/fit_comparison.R')
return_couples(coupling_og)
coupling_og[35,37]
source('~/GitHub/PathwayMining/fit_comparison.R')
return_couples(coupling_og)
source('~/GitHub/PathwayMining/fit_comparison.R')
return_couples(coupling_og)
source('~/GitHub/PathwayMining/fit_comparison.R')
return_couples(coupling_og)
source('~/GitHub/PathwayMining/fit_comparison_run.R')
coupling_suppr <- flux_coupling_cor(sample_suppr)
coupling_change(coupling_og, coupling_suppr)
return_couples(sample_suppr - sample_og)
return_couples(coupling_suppr - coupling_og)
source('~/GitHub/PathwayMining/fit_comparison.R')
source('~/GitHub/PathwayMining/fit_comparison_run.R')
coupling_change(coupling_og, coupling_suppr)
source('~/GitHub/PathwayMining/fit_comparison.R')
coupling_change(coupling_og, coupling_suppr)
coupling_og <- flux_coupling_cor(sample_og)
coupling_suppr <- flux_coupling_cor(sample_suppr)
coupling_change(coupling_og, coupling_suppr)
source('~/GitHub/PathwayMining/fit_comparison.R')
coupling_og <- flux_coupling_cor(sample_og)
coupling_suppr <- flux_coupling_cor(sample_suppr)
source('~/GitHub/PathwayMining/fit_comparison.R')
coupling_og <- flux_coupling_cor(sample_og)
coupling_suppr <- flux_coupling_cor(sample_suppr)
coupling_change(coupling_og, coupling_suppr)
coupling_og <- flux_coupling(sample_og)
coupling_suppr <- flux_coupling(sample_suppr)
source('~/GitHub/PathwayMining/fit_comparison.R')
coupling_og <- flux_coupling(sample_og)
coupling_suppr <- flux_coupling(sample_suppr)
coupling_og <- flux_coupling(sample_og, binary = FALSE)
coupling_suppr <- flux_coupling(sample_suppr, binary = FALSE)
coupling_change(coupling_og, coupling_suppr)
coupling_change(coupling_og[1, ,], coupling_suppr[1, ,])
dim(coupling_og[1, ,])
source('~/GitHub/PathwayMining/fit_comparison.R')
coupling_og <- flux_coupling(sample_og, binary = FALSE)
coupling_suppr <- flux_coupling(sample_suppr, binary = FALSE)
coupling_change(coupling_og[1, ,], coupling_suppr[1, ,])
source('~/GitHub/PathwayMining/fit_comparison.R')
coupling_og <- flux_coupling(sample_og, binary = FALSE)
coupling_suppr <- flux_coupling(sample_suppr, binary = FALSE)
coupling_change(coupling_og, coupling_suppr)
source('~/GitHub/PathwayMining/fit_comparison.R')
coupling_change(coupling_og, coupling_suppr)
source('~/GitHub/PathwayMining/fit_comparison.R')
source('~/GitHub/PathwayMining/fit_comparison.R')
coupling_og <- flux_coupling(sample_og, binary = FALSE)
coupling_suppr <- flux_coupling(sample_suppr, binary = FALSE)
coupling_change(coupling_og, coupling_suppr)
coupling_og <- flux_coupling(rescale_sample(sample_og), binary = FALSE)
coupling_suppr <- flux_coupling(rescale_sample(sample_suppr), binary = FALSE)
coupling_change(coupling_og, coupling_suppr)
coupling_og_cor <- flux_coupling_cor(rescale_sample(sample_og))
coupling_suppr_cor <- flux_coupling_cor(rescale_sample(sample_suppr))
coupling_change(coupling_og_cor, coupling_suppr_cor)
setwd("~/GitHub/PathwayMining")
write.csv(coupling_suppr - coupling_og, "coupling_diff.csv")
write.csv(coupling_suppr_cor - coupling_og_cor, "coupling_diff_cor.csv")
cor_diff <- (coupling_suppr - coupling_og) - (coupling_suppr_cor - coupling_og_cor)
cor_diff
source('~/GitHub/PathwayMining/fit_comparison.R')
coupling_og_cor <- flux_coupling_cor(rescale_sample(sample_og))
coupling_suppr_cor <- flux_coupling_cor(rescale_sample(sample_suppr))
coupling_change(coupling_og_cor, coupling_suppr_cor)
source('~/GitHub/PathwayMining/fit_comparison.R')
coupling_og_cor <- flux_coupling_cor(rescale_sample(sample_og))
coupling_suppr_cor <- flux_coupling_cor(rescale_sample(sample_suppr))
coupling_change(coupling_og_cor, coupling_suppr_cor)
coupling_change(coupling_og, coupling_suppr)
apply(maxDiff4, 2, max)
length(which(apply(maxDiff1, 2, max) - apply(maxDiff4, 2, max) > 0))
length(which(apply(maxDiff1, 2, max) - apply(maxDiff3, 2, max) > 0))
length(which(apply(maxDiff1, 2, max) - apply(maxDiff2, 2, max) > 0))
length(which(apply(maxDiff1, 2, max) - apply(maxDiff1, 2, max) > 0))
W = 200
sample <- sampler(model)
diff_w1 <- maxDiff_dist(sample)
W = 500
sample <- sampler(model)
diff_w2 <- maxDiff_dist(sample)
W = 1000
sample <- sampler(model)
diff_w3 <- maxDiff_dist(sample)
W = 2000
sample <- sampler(model)
diff_w4 <- maxDiff_dist(sample)
length(which(apply(diff_w1, 2, max) - apply(diff_w2, 2, max) > 0))
length(which(apply(diff_w1, 2, max) - apply(diff_w3, 2, max) > 0))
length(which(apply(diff_w1, 2, max) - apply(diff_w4, 2, max) > 0))
W = 5000
sample <- sampler(model)
diff_w5 <- maxDiff_dist(sample)
length(which(apply(diff_w1, 2, max) - apply(diff_w5, 2, max) > 0))
length(which(apply(diff_w1, 2, max) - apply(diff_w4, 2, max) > 0))
W = 20000
sample <- sampler(model)
diff_w6 <- maxDiff_dist(sample)
length(which(apply(diff_w1, 2, max) - apply(diff_w6, 2, max) > 0))
length(which(apply(diff_w1, 2, max) - apply(diff_w5, 2, max) > 0))
W = 10000
sample <- sampler(model)
diff_w6 <- maxDiff_dist(sample)
length(which(apply(diff_w1, 2, max) - apply(diff_w6, 2, max) > 0))
length(which(apply(diff_w5, 2, max) - apply(diff_w6, 2, max) > 0))
length(which(apply(diff_w4, 2, max) - apply(diff_w6, 2, max) > 0))
length(which(apply(diff_w3, 2, max) - apply(diff_w6, 2, max) > 0))
length(which(apply(diff_w2, 2, max) - apply(diff_w6, 2, max) > 0))
length(which(apply(diff_w4, 2, max) - apply(diff_w5, 2, max) > 0))
apply(diff_w4, 2, mean)
apply(diff_w5, 2, mean)
apply(diff_w6, 2, mean)
1/1000
2/1000
hist(maxDiff4[,1])
hist(maxDiff4[,1], breaks = 0.01)
hist(maxDiff4[,1], breaks = seq(0, 0.4, 0.01))
hist(maxDiff4[,1], breaks = seq(0, 0.4, 0.002))
hist(maxDiff1[,1], breaks = seq(0, 0.4, 0.002))
par(mfrow=c(2,2))
hist(maxDiff1[,1], breaks = seq(0, 0.4, 0.002))
hist(maxDiff2[,1], breaks = seq(0, 0.4, 0.002))
hist(maxDiff3[,1], breaks = seq(0, 0.4, 0.002))
hist(maxDiff4[,1], breaks = seq(0, 0.4, 0.002))
hist(maxDiff4[,1], breaks = seq(0, 0.4, max(maxDiff4[,1])))
hist(maxDiff4[,1], breaks = seq(0, 0.4, 0.002))
hist(maxDiff4[,1], breaks = seq(0, max(maxDiff4[,1]), 0.002))
hist(maxDiff4[,1], breaks = seq(0, max(maxDiff4), 0.002))
hist(maxDiff4[,1], breaks = seq(0, max(maxDiff4[,1]), 0.002))
max(maxDiff4[,1])
hist(maxDiff4[,1], breaks = seq(0, 0.3340214, 0.002))
hist(maxDiff4[,1], breaks = seq(0, max(maxDiff4[,1])+0.001, 0.002))
hist(maxDiff4[,1], breaks = seq(0, max(maxDiff4[,1])+0.01, 0.002))
hist(maxDiff4[,37], breaks = seq(0, max(maxDiff4[,1])+0.01, 0.002))
par(mfrow=c(2,2))
hist(maxDiff1[,37], breaks = seq(0, max(maxDiff1[,37])+0.01, 0.002))
hist(maxDiff2[,37], breaks = seq(0, max(maxDiff2[,37])+0.01, 0.002))
hist(maxDiff3[,37], breaks = seq(0, max(maxDiff3[,37])+0.01, 0.002))
hist(maxDiff4[,37], breaks = seq(0, max(maxDiff4[,37])+0.01, 0.002))
par(mfrow=c(2,2))
plotMaxDiff <- function(maxDiff, idx){
hist(maxDiff[,idx], breaks = seq(0, max(maxDiff[,idx])+0.01, 0.002))
}
plotMaxDiff(maxDiff1, 37)
plotMaxDiff(maxDiff2, 37)
plotMaxDiff(maxDiff3, 37)
plotMaxDiff(maxDiff4, 37)
source('~/GitHub/PathwayMining/fit_comparison_run.R')
par(mfrow=c(2,2))
plotMaxDiff <- function(maxDiff, idx){
hist(maxDiff[,idx], breaks = seq(0, max(maxDiff[,idx])+0.01, 0.002))
}
plotMaxDiff(maxDiff1, 1)
plotMaxDiff(maxDiff2, 1)
plotMaxDiff(maxDiff3, 1)
plotMaxDiff(maxDiff4, 1)
idx = 5
par(mfrow=c(2,2))
plotMaxDiff <- function(maxDiff, idx){
hist(maxDiff[,idx], breaks = seq(0, max(maxDiff[,idx])+0.01, 0.002))
}
plotMaxDiff(maxDiff1, idx)
plotMaxDiff(maxDiff2, idx)
plotMaxDiff(maxDiff3, idx)
plotMaxDiff(maxDiff4, idx)
idx = 20
par(mfrow=c(2,2))
plotMaxDiff <- function(maxDiff, idx){
hist(maxDiff[,idx], breaks = seq(0, max(maxDiff[,idx])+0.01, 0.002))
}
plotMaxDiff(maxDiff1, idx)
plotMaxDiff(maxDiff2, idx)
plotMaxDiff(maxDiff3, idx)
plotMaxDiff(maxDiff4, idx)
apply(maxDiff1, 2, mean)
apply(maxDiff4, 2, mean)
apply(diff_w1, 2, mean)
apply(diff_w6, 2, mean)
idx = 37
par(mfrow=c(2,2))
plotMaxDiff <- function(maxDiff, idx){
hist(maxDiff[,idx], breaks = seq(0, max(maxDiff[,idx])+0.01, 0.002))
}
plotMaxDiff(maxDiff1, idx)
plotMaxDiff(maxDiff2, idx)
plotMaxDiff(maxDiff3, idx)
plotMaxDiff(maxDiff4, idx)
idx = 37
par(mfrow=c(2,2))
plotMaxDiff <- function(maxDiff, idx){
hist(maxDiff[,idx], breaks = seq(0, max(maxDiff[,idx])+0.01, 0.002))
}
plotMaxDiff(diff_w1, idx)
plotMaxDiff(diff_w2, idx)
plotMaxDiff(diff_w4, idx)
plotMaxDiff(diff_w6, idx)
idx = 37
par(mfrow=c(2,2))
plotMaxDiff <- function(maxDiff, idx){
hist(maxDiff[,idx], breaks = seq(0, max(maxDiff[,idx])+0.01, max(maxDiff[,idx])/1000))
}
plotMaxDiff(diff_w1, idx)
plotMaxDiff(diff_w2, idx)
plotMaxDiff(diff_w4, idx)
plotMaxDiff(diff_w6, idx)
par(mfrow=c(2,2))
plotMaxDiff(maxDiff1, idx)
plotMaxDiff(maxDiff2, idx)
plotMaxDiff(maxDiff3, idx)
plotMaxDiff(maxDiff4, idx)
idx = 37
plotMaxDiff <- function(maxDiff, idx){
hist(maxDiff[,idx], breaks = seq(0, max(maxDiff[,idx])+0.01, 0.0001))
}
par(mfrow=c(2,2))
plotMaxDiff(diff_w1, idx)
plotMaxDiff(diff_w2, idx)
plotMaxDiff(diff_w4, idx)
plotMaxDiff(diff_w6, idx)
idx = 37
plotMaxDiff <- function(maxDiff, idx){
hist(maxDiff[,idx], breaks = seq(0, max(maxDiff[,idx])+0.005, 0.0001))
}
par(mfrow=c(2,2))
plotMaxDiff(diff_w1, idx)
plotMaxDiff(diff_w2, idx)
plotMaxDiff(diff_w4, idx)
plotMaxDiff(diff_w6, idx)
idx = 55
par(mfrow=c(2,2))
plotMaxDiff(diff_w1, idx)
plotMaxDiff(diff_w2, idx)
plotMaxDiff(diff_w4, idx)
plotMaxDiff(diff_w6, idx)
idx = 55
par(mfrow=c(2,2))
plotMaxDiff(diff_w1, idx)
plotMaxDiff(diff_w2, idx)
idx = 55
par(mfrow=c(2,2))
plotMaxDiff(diff_w1, idx)
plotMaxDiff(diff_w2, idx)
plotMaxDiff(diff_w4, idx)
idx = 55
par(mfrow=c(2,2))
plotMaxDiff(diff_w1, idx)
plotMaxDiff(diff_w2, idx)
plotMaxDiff(diff_w4, idx)
plotMaxDiff(diff_w6, idx)
source('~/Jensen Lab/code/functions/pathway_id_functions.R')
plot_rxns(model@react_id)
library(BiGGR)
##Generate an example model
path <- system.file("extdata", "Glycolysis_TCA_recon2_reactionIDs.txt", package="BiGGR")
reaction.ids <- scan(path, what=" ")
#BMID000000142789.xml
data("Recon2")
plot_rxns(model@react_id)
model@react_id
model@react_attr
model@react_de
model@obj_coef
model@met_attr
model@react_de
model@comp_attr
model
model@mod_desc
model@mod_name
model@mod_id
model@mod_id
model@mod_key
model@mod_compart
model@mod_attr
model@met_num
model@met_single
model@met_de
model@react_rev
model@lowbnd
model@uppbnd
model@S@i
model@S@p
model@S@Dim
model@S@Dimnames
model@S@x
model@S@factors
model@S
names(model@S)
model@S[1,]
names(model@S[1,])
model@S[,1]
dim(model@S)
model@met_num
2/(1001)
1/(1001)
par(mfrow=c(2,2))
plotMaxDiff(maxDiff1, idx)
plotMaxDiff(maxDiff2, idx)
plotMaxDiff(maxDiff3, idx)
plotMaxDiff(maxDiff4, idx)
2/1000
apply(maxDiff4, 2, mean)
2/1000
fluxVar(model = model)
fva <- fluxVar(model = model)
fva
fva@react
fva@preProc
fva@postProc
fva@fluxdist
fva@fluxdist@fluxes
fva@fluxdist@fluxes@x
fva@alg_par
fva@fluxdist
fva@fluxdist@fluxes@factors
fva@fluxdist@fluxes@factors[1]
fva@fluxdist@fluxes@uplo
fva@fluxdist@fluxes@x
fva@fluxdist@fluxes@Dim
fva[1]
fva@lp_stat
fva@fldind
fva@fluxdist
fva.maxSol
maxSol(fva)
maxSol(object = "optsol_fluxVar")(fva)
?maxSol()
?maxSol
maxSol(object = "optsol_fluxVar", fva)
maxSol(object = fva)
maxSol(object = fva, fva)
fva@fluxdist[1]
fva@fluxdist[[1]]
fva@fluxdist
fva@fluxdist@fluxes[1]
fva@fluxdist@fluxes
fva@fluxdist@fluxes@uplo
fva@fluxdist@fluxes@Dimnames
fva@fluxdist@fluxes@Dim
fva@fluxdist@fluxes@factors
plot(fva)
plot(fva)
fva@alg_par
fva@fldind
fva.maxSol
fva.maxSol()
maxSol(fva)
maxSol(object, fva)
maxSol(fva, fva)
plot(fva)[1]
plot(fva)
plt = plot(fva)
plt
fva@fluxdist@fluxes
fva@fluxdist@fluxes@x
fva@fluxdist@fluxes@@
fva@fluxdist@fluxes@factors
fva@obj_func
fva@obj_coef
fva@mod_key
fva@preProc@ind
fva@preProc@pa
fva@preProc@cmd
fva@num_of_prob
fva@lp_num_cols
fva@lp_num_rows
fva@lp_ok
fva@lp_dir
fva@fluxdist
fva@fluxdist@fluxes
maxSol: signature(object = "optsol_fluxVar")(fva)
fva@maxSol
fva$maxSol
fva:maxSol
fva:maxSol(object = "opsol_fluxVar")
maxSol(fva)
plotRangeVar(fva)
library('raptor')
source('~/GitHub/PathwayMining/sampling_tools.R')
source('~/GitHub/PathwayMining/fit_comparison_run.R')
source('~/GitHub/PathwayMining/model_tools.R')
source('~/GitHub/PathwayMining/set_tools.R')
source('~/GitHub/PathwayMining/falcon_tools.R')
source('~/GitHub/PathwayMining/load_mod.R')
source('~/GitHub/PathwayMining/grb_tools.R')
source('~/GitHub/PathwayMining/raptor_coupling.R')
yeast_falcon <- GRB_yeast_falcon_model()
yeast_falcon_test_set_list <- get_list_of_sets(return_couples(flux_coupling_raptor(yeast_falcon)$coupled))
yeast_falcon_test_set_list <- get_list_of_sets(return_couples(flux_coupling_raptor(yeast_falcon)$coupled))
yeast_falcon_test_set_list
yeast_falcon_test_set_list[[1:2]]
yeast_falcon_test_set_list[1:2]
yeast_falcon_test_set_list[1:10]
yeast_falcon_test_set_list[1:30]
source('raptor_coupling.R')
yeast_falcon <- GRB_yeast_falcon_model()
yeast_falcon_test_set_list <- get_list_of_sets(return_couples(flux_coupling_raptor(yeast_falcon)$coupled))
source('raptor_coupling.R')
yeast_falcon <- GRB_yeast_falcon_model()
yeast_falcon_test_set_list <- get_list_of_sets(return_couples(flux_coupling_raptor(yeast_falcon)$coupled))
yeast_falcon_test_set_list <- get_list_of_sets(return_couples(flux_coupling_raptor(yeast_falcon)$coupled))
source('raptor_coupling.R')
yeast_falcon_test_set_list <- get_list_of_sets(return_couples(flux_coupling_raptor(yeast_falcon)$coupled))
source('raptor_coupling.R')
yeast_falcon_test_set_list <- get_list_of_sets(return_couples(flux_coupling_raptor(yeast_falcon)$coupled))
source('raptor_coupling.R')
yeast_falcon_test_set_list <- get_list_of_sets(return_couples(flux_coupling_raptor(yeast_falcon)$coupled))
source('raptor_coupling.R')
yeast_falcon_test_set_list <- get_list_of_sets(return_couples(flux_coupling_raptor(yeast_falcon)$coupled))
source('raptor_coupling.R')
yeast_falcon_test_set_list <- get_list_of_sets(return_couples(flux_coupling_raptor(yeast_falcon)$coupled))
q()
