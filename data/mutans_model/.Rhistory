source('~/Documents/Masters_1/504/504 project data/project_script.R')
source('~/Documents/Masters_1/504/504 project data/project_script.R')
plot(ya[,1], ya[,2], yb[,1], yb[,2])
ya <- transform(mtx[(1:1000), c(1,3)])
source('~/Documents/Masters_1/504/504 project data/project_script.R')
plot(ya[,1], ya[,2])
plot(yb[,1], yb[,2])
plot(ya[,1], ya[,2])
points(yb[,1], yb[,2])
y <- transform(mtx[, c(1,3)])
plot(y[,1], y[,2])
source('~/Documents/Masters_1/504/504 project data/project_script.R')
y <- transform_2(mtx[, c(a,b)], u[1,], u[2,])
plot(y[,1], y[,2])
y
points(y[,3], y[,4])
source('~/Documents/Masters_1/504/504 project data/project_script.R')
source('~/Documents/Masters_1/504/504 project data/project_script.R')
lac_n_fit
lac_c_fit
lac_n_fit$estimate[[mean]]
lac_n_fit$estimate[['mean']]
lac_n_fit$estimate[['sd']]
load("~/GitHub/PathwayMining/data/yeast_model/yeast_open_mod.RData")
yeast_open_mod
load("~/GitHub/PathwayMining/data/yeast_model/yeast_model.RData")
yeast_model
load("~/GitHub/PathwayMining/data/yeast_model/yeast_model_mod.RData")
yeast_model_mod
load("~/GitHub/PathwayMining/yeast_run_data.RData")
length(unlist(yeast_r1_gene_set_list))
length(unlist(yeast_og_gene_set_list))
load("~/GitHub/PathwayMining/mutans_run_data.RData")
cit_n_fit$estimate[['mean']]
cit_n_fit$estimate[['sd']]
lac_c_fit$estimate[['mean']]
lac_c_fit$estimate[['sd']]
cit_c_fit$estimate[['mean']]
cit_c_fit$estimate[['sd']]
load("~/GitHub/PathwayMining/data/mutans_model/mutans_model.RData")
mutans_falcon <- generate_falcon_model(mutans)
source('~/GitHub/PathwayMining/falcon_tools.R')
mutans_falcon <- generate_falcon_model(mutans)
mutans_falcon@S[,233]
which(mutans_falcon@S[,233] != 0)
mutans_falcon@met_id[which(mutans_falcon@S[,233] != 0)]
mutans_falcon@gpr[233]
source('~/GitHub/PathwayMining/logic_tools.R')
mutans_falcon@gprRules[26]
find_gpr_paths(mutans_falcon@gprRules[26])
find_gpr_paths(mutans@gprRules[26])
find_gpr_paths(mutans@gprRules[1])
find_gpr_paths(mutans@gprRules[2])
find_gpr_paths(mutans@gprRules[27])
find_gpr_paths(mutans@gprRules[533])
mutans@gprRules[533]
find_gpr_paths(mutans@gprRules[[533]])
source('~/GitHub/PathwayMining/logic_tools.R')
find_gpr_paths(mutans@gprRules[[533]])
source('~/GitHub/PathwayMining/logic_tools.R')
find_gpr_paths(mutans@gprRules[[533]])
source('~/GitHub/PathwayMining/logic_tools.R')
find_gpr_paths(mutans@gprRules[[533]])
source('~/GitHub/PathwayMining/logic_tools.R')
find_gpr_paths(mutans@gprRules[[533]])
mutans@gprRules[533]
mutans@gprRules[532]
find_gpr_paths(mutans@gprRules[[532]])
find_gpr_paths(mutans@gprRules[[531]])
find_gpr_paths(mutans@gprRules[[530]])
find_gpr_paths(mutans@gprRules[[529]])
source('~/GitHub/PathwayMining/logic_tools.R')
find_gpr_paths(mutans@gprRules[[529]])
find_gpr_paths(mutans@gprRules[[533]])
source('~/GitHub/PathwayMining/logic_tools.R')
find_gpr_paths(mutans@gprRules[[533]])
source('~/GitHub/PathwayMining/logic_tools.R')
find_gpr_paths(mutans@gprRules[[533]])
str_to_char('abcds')
source('~/GitHub/PathwayMining/logic_tools.R')
find_gpr_paths(mutans@gprRules[[533]])
source('~/GitHub/PathwayMining/logic_tools.R')
find_gpr_paths(mutans@gprRules[[533]])
source('~/GitHub/PathwayMining/logic_tools.R')
find_gpr_paths(mutans@gprRules[[533]])
find_gpr_paths(mutans@gprRules[[532]])
which(mutans@react_id == "R00130")
mutans@gpr[3]
mutans_falcon@react_id[3]
mutans_falcon@S[,3]
mutans_falcon@met_id[which(mutans_falcon@S[,3] != 0)]
mutans@met_id[which(mutans@S[,3] != 0)]
which(!(mutans@react_id %in% mutans_falcon))
which(!(mutans@react_id %in% mutans_falcon@react_id))
source('~/GitHub/PathwayMining/falcon_tools.R')
mutans_falcon <- generate_falcon_model(mutans)
source('~/GitHub/PathwayMining/falcon_tools.R')
mutans_falcon <- generate_falcon_model(mutans)
source('~/GitHub/PathwayMining/falcon_tools.R')
which(mutans_falcon@react_id == 'R00130')
which(mutans_falcon@S[,3] != 0)
which(mutans@S[,3] != 0)
which(mutans_falcon@react_id == 'R03035')
which(mutans_falcon@S[,245] != 0)
which(mutans@S[,245] != 0)
dim(mutans@S)
dim(mutans_falcon@S)
mutans_falcon@react_id[3]
mutans@react_id[3]
source('~/Documents/Masters_1/504/504 project data/project_script.R')
plot(mtx[1001:2000,1]*mtx[1001:2000,1],mtx[1001:2000,3]*mtx[1001:2000,3])
hist(mtx[1:1000,1])
hist(mtx[1001:2000,1], add=T)
hist(mtx[1001:2000,1])
hist(mtx[1:1000,1], add=T)
load("~/GitHub/PathwayMining/.RData")
source('~/GitHub/PathwayMining/main.R')
which(yeast_falcon@met_id = 'a_r_1414')
which(yeast_falcon@met_id == 'a_r_1414')
which(yeast_falcon@S[3100] != 0)
which(yeast_falcon@S[3100,] != 0)
get_react_coeffs(yeast_falcon, 1397)
get_react_coeffs(yeast_falcon, 5326)
get_react_coeffs(yeast_falcon, 5327)
which(yeast_falcon@met_id == 'a_YIL006W')
which(yeast_falcon@S[2274,] != 0)
c <- which(yeast_falcon@S[2274,] != 0)
yeast_falcon@S[2274,c]
yeast_falcon@lowbnd[c]
yeast_falcon@uppbnd[c]
which(yeast_falcon@met_id == "a_r_0036")
which(yeast_falcon@S[2376,] != 0)
get_react_coeffs(yeast_falcon, 3124)
get_react_coeffs(yeast_falcon, 3125)
get_react_coeffs(yeast_falcon, 36)
get_react_coeffs(yeast_falcon, 1414)
which(yeast_falcon@met_id == "r_1414")
which(yeast_falcon@react_id == "r_1414")
get_react_coeffs(yeast_falcon, 1397)
which(yeast_falcon@met_id == 's_0199')
which(yeast_falcon@S[98,] != 0)
get_react_coeffs(yeast_model, 36)
yeast_model@react_id[36]
yeast_model@react_id[1785]
which(yeast_model@met_id == 's_0199')
which(yeast_model@S[98,] != 0)
which(yeast_model@met_id == 's_0564')
which(yeast_falcon@S[99,] != 0)
yeast_falcon@S[99,c(36, 84, 358, 1397)]
get_react_coeffs(yeast_model, 36)
get_react_coeffs(yeast_falcon, 36)
which(yeast_falcon@met_id == 'a_r_0036')
which(yeast_falcon@S[2376,] != 0)
get_react_coeffs(yeast_falcon, 3124)
get_react_coeffs(yeast_falcon, 3125)
yeast_falcon@lowbnd[36]
yeast_falcon@uppbnd[36]
yeast_falcon@lowbnd[1785]
yeast_falcon@uppbnd[1785]
yeast_model@lowbnd[36]
yeast_model@uppbnd[36]
yeast_falcon
get_react_coeffs(yeast_falcon, 36)
which(yeast_falcon@met_id == 'a_r_0036')
which(yeast_falcon@S[2376,] != 0)
which(yeast_falcon@met_id == 's_0564')
which(yeast_falcon@S[99,] != 0)
yeast_falcon@react_id[84]
yeast_falcon@react_id[36]
yeast_falcon@react_id[358]
yeast_falcon@react_id[1397]
yeast_falcon@genes
unique(unlist(yeast_falcon@genes))
yeast_falcon
length(unique(unlist(yeast_falcon@genes)))
a <- matrix(nrow = 5, ncol = 5)
a
a <- matrix(data = 0, nrow = 5, ncol = 5)
a
a[2,2] <- 1
a[3,2] <- 1
a[3,3] <- 1
a
a[:,2] != 0 | a[:,3] != 0
a[,2] != 0 | a[,3] != 0
a[3,4] <- 1
a[,2] != 0 | a[,3] != 0
a
a[3,4] <- 0
a[4,3] <- 0
a[,2] != 0 | a[,3] != 0
a[4,3] <- 1
a[,2] != 0 | a[,3] != 0
a
which(a[,2] != 0 | a[,3] != 0)
length(which(a[,2] != 0 | a[,3] != 0))
cor(a[,1], a[,4])
cor(a[,1], a[,3])
cor(a[,2], a[,3])
?array
array(data = 0, dim = c(3,4,5))
a <- c('a', 'b', 'c')
b <- c('1', '2', '3', '4')
c <- c('v','w','x','y','z')
array(data = 0, dim = c(3,4,5), dimnames = list(a,b,c))
test <- array(data = 0, dim = c(3,4,5), dimnames = list(a,b,c))
test[,,1]
dim(test)
dim(test)[1]
dimnames(test)
dimnames(test)[1]
dimnames(test)[[1]]
?matrix
dimnames(test)[1,1]
dimnames(test)[1,2]
dimnames(test)[1:2]
length(which('a' %in% c('b', 'c', 'c')))
length(which('b' %in% c('b', 'c', 'c')))
length(which('c' %in% c('b', 'c', 'c')))
length(which(c('b', 'c', 'c') == 'a'))
length(which(c('b', 'c', 'c') == 'b'))
length(which(c('b', 'c', 'c') == 'c'))
test[1,1,]
20/15
2*20/15
4/3
1.25*20/15
1.25*4/3
1.5*4/3
.5*4/3
1*4/3
60 -(5+10+2)
lapply((1:5), print(x))
lapply((1:5), FUN = print(x))
lapply((1:5), FUN = print)
test <- function(x){print(x+1)}
lapply((1:5), FUN = test)
lapply((1:5), FUN = x+1)
lapply((1:5), FUN = (x+1))
a = 2
test <- function(x){print(x+a)}
lapply((1:5), FUN = test)
install.packages("rslurm")
2.25*600
2.25*600/60
n
n <- 15
suppr_vector <- matrix(data = FALSE, nrow = 1, ncol = n)
suppression_idxs <- c(1,4,8)
suppr_vector[suppression_idxs] <- TRUE
suppr_vector
which(suppr_vector)
grepl('a', 'bad')
grepl('a', 'bsd')
load("~/GitHub/PathwayMining/data/mutans_model/mutans_falcon_g1_matrix.RData")
source('~/GitHub/PathwayMining/falcon_tools.R')
mutans_falcon_g1_sets <- list(get_list_of_sets(return_couples(mutans_falcon_g1_matrix)))
source('~/GitHub/PathwayMining/falcon_tools.R')
clean_mutans_g1_set <- clean_rxn_names_in_set(mutans_falcon_g1_sets)
clean_mutans_g1_set <- clean_rxn_names_in_set(mutans_falcon_g1_sets[[1]])
source('~/GitHub/PathwayMining/falcon_tools.R')
gene_mtx <- isolate_gene_set(mutans_falcon_g1_matrix)
gene_mtx
source('~/GitHub/PathwayMining/falcon_tools.R')
gene_mtx <- isolate_gene_set(mutans_falcon_g1_matrix)
gene_mtx
dim(gene_mtx)
mutans_g1_sets <- list(get_list_of_sets(return_couples(gene_mtx)))
clean_mutans_g1_set <- clean_rxn_names_in_set(mutans_g1_sets)
clean_mutans_g1_set <- clean_rxn_names_in_set(mutans_g1_sets[[1]])
mutans_g1_sets
clean_mutans_g1_set <- clean_rxn_names_in_set(mutans_g1_sets[1])
clean_mutans_g1_set <- clean_rxn_names_in_set(mutans_g1_sets[[1]])
source('~/GitHub/PathwayMining/falcon_tools.R')
clean_mutans_g1_set <- clean_rxn_names_in_set(mutans_g1_sets[[1]])
clean_mutans_g1_set
clean_rxn_names_in_set(mutans_g1_sets[[1]])
source('~/GitHub/PathwayMining/falcon_tools.R')
clean_mutans_g1_set <- clean_rxn_names_in_set(mutans_g1_sets[[1]])
clean_mutans_g1_set
library(tabulizer)
library(dplyr)
library(devtools)
install_github("ropensci/tabulizer")
ghit::install_github(c("ropensci/tabulizerjars", "ropensci/tabulizer"))
if (!require("ghit")) {
install.packages("ghit")
}
ghit::install_github(c("ropensci/tabulizerjars", "ropensci/tabulizer"))
library(tabulizer)
library("ghit", lib.loc="~/R/x86_64-pc-linux-gnu-library/3.4")
ghit::install_github(c("ropensci/tabulizerjars", "ropensci/tabulizer"))
install_github("ropensci/tabulizer")
ghit::install_github(c("ropensci/tabulizerjars", "ropensci/tabulizer"))
ghit::install_github(c("ropensci/tabulizerjars", "ropensci/tabulizer"))
location <- 'file:///home/dikshant/Documents/jensn%20lab/mutans_data/tnSeq_paper/inline-supplementary-material-3.pdf'
out <- extract_tables(location)
library(tabulizer)
library("tabulizer", lib.loc="~/R/x86_64-pc-linux-gnu-library/3.4")
library("tabulizerjars", lib.loc="~/R/x86_64-pc-linux-gnu-library/3.4")
out <- extract_tables(location)
library("rJava", lib.loc="~/R/x86_64-pc-linux-gnu-library/3.4")
library(tabulizer)
library(dplyr)
detach("package:rJava", unload=TRUE)
library("rJava", lib.loc="~/R/x86_64-pc-linux-gnu-library/3.4")
load("~/GitHub/PathwayMining/data/mutans_model/mutans_r0_coupling_mtx.RData")
source('~/GitHub/PathwayMining/main.R')
source('~/GitHub/PathwayMining/main.R')
source('~/GitHub/PathwayMining/main.R')
source('~/GitHub/PathwayMining/main.R')
source('~/GitHub/PathwayMining/main.R')
source('~/GitHub/PathwayMining/main.R')
which(Baker_UA159ss_pH7_Glucose_Shock$`GB acc` == 'SMU_1261')
which(Baker_UA159ss_pH7_Glucose_Shock$`GB acc` == 'SMU_1261C')
which(Baker_UA159ss_pH7_Glucose_Shock$`GB acc` == 'SMU_1261c')
source('~/GitHub/PathwayMining/main.R')
source('~/GitHub/PathwayMining/main.R')
plot(fitn_expr_fold_change[,3], fitn_expr_fold_change[,2])
plot(fitn_expr_fold_change[,2], fitn_expr_fold_change[,3])
genes_of_interest
dim(fitn_expr_fold_change)
source('~/GitHub/PathwayMining/main.R')
genes_of_interest
gene_idx
fitn_expr_fold_change[gene_idx,2]
fitn_expr_fold_change[gene_idx,3]
source('~/GitHub/PathwayMining/main.R')
source('~/GitHub/PathwayMining/main.R')
source('~/GitHub/PathwayMining/main.R')
plot(fitn_expr_fold_change[,2], fitn_expr_fold_change[,3])
plot(1:nrow(fitn_expr_fold_change), fitn_expr_fold_change[,2])
plot(1:nrow(fitn_expr_fold_change), fitn_expr_fold_change[,3])
log2(1)
plot(1:nrow(fitn_expr_fold_change), log2(fitn_expr_fold_change[,3]))
log(0)
plot(1:nrow(fitn_expr_fold_change), log2(fitn_expr_fold_change[(fitn_expr_fold_change[,3] > 0),3]))
fitn_expr_fold_change[(fitn_expr_fold_change[,3] > 0),3]
plot(1:nrow(fitn_expr_fold_change), log2(fitn_expr_fold_change[(fitn_expr_fold_change[,3] > 0),3]))
plot(fitn_expr_fold_change[,2], fitn_expr_fold_change[,3])
plot(1:nrow(fitn_expr_fold_change), fitn_expr_fold_change[,2])
which(fitn_expr_fold_change[,3] > 0)
log2_fitn_expr_fold_change
fitn_expr_fold_change
length(!is.na(fitn_expr_fold_change[,3]))
length(fitn_expr_fold_change[,3])
fitn_expr_fold_change[333,3]
fitn_expr_fold_change[332,3]
is.na(fitn_expr_fold_change[332,3])
!is.na(fitn_expr_fold_change[333,3])
length(which(!is.na(fitn_expr_fold_change[,3])))
fitn_expr_fold_change <- fitn_expr_fold_change[-c(which(is.na(fitn_expr_fold_change[,3]))),]
length(which(!is.na(fitn_expr_fold_change[,3])))
fitn_expr_fold_change
which(is.infinite(fitn_fold_change))
which(fitn_fold_change == 'Inf')
which(fitn_fold_change == 'NaN')
expr_fold_change
source('~/GitHub/PathwayMining/main.R')
fitn_expr_fold_change
is.nan(fitn_expr_fold_change[,2])
which(fitn_expr_fold_change[,2] == 'NaN')
source('~/GitHub/PathwayMining/main.R')
fitn_expr_fold_change
plot(log2_fitn_expr_fold_change[,2], log2_fitn_expr_fold_change[,3])
plot(fitn_expr_fold_change[,2], fitn_expr_fold_change[,3])
plot(1:nrow(fitn_expr_fold_change), fitn_expr_fold_change[,2])
plot(1:nrow(fitn_expr_fold_change), fitn_expr_fold_change[,3])
plot(1:nrow(fitn_expr_fold_change), fitn_expr_fold_change[,2]) # fitness
plot(1:nrow(fitn_expr_fold_change), fitn_expr_fold_change[,2], main = 'Fitness Fold Change') # fitness
plot(1:nrow(fitn_expr_fold_change), fitn_expr_fold_change[,2], main = 'Fitness Fold Change Under Mild Nutrient Stress', xlab = 'Gene Index', ylab = 'Fold Change') # fitness
plot(1:nrow(log2_fitn_expr_fold_change), log2_fitn_expr_fold_change[,2], main = 'Fitness Fold Change Under Mild Nutrient Stress', xlab = 'Gene Index', ylab = 'Fold Change') # fitness
plot(1:nrow(log2_fitn_expr_fold_change), log2_fitn_expr_fold_change[,2], main = 'Fitness Fold Change Under Mild Nutrient Stress', xlab = 'Gene Index', ylab = 'Log2 Fold Change') # fitness
plot(1:nrow(log2_fitn_expr_fold_change), log2_fitn_expr_fold_change[,2], main = 'Fitness Fold Change Under Mild Nutrient Stress', xlab = 'Gene Index', ylab = 'Log2 Fold Change') # fitness
plot(1:nrow(log2_fitn_expr_fold_change), log2_fitn_expr_fold_change[,3], main = 'Expression Fold Change Under Acid Stress', xlab = 'Gene Index', ylab = 'Log2 Fold Change') # expr
plot(1:nrow(log2_fitn_expr_fold_change), fitn_expr_fold_change[,3], main = 'Expression Fold Change Under Acid Stress', xlab = 'Gene Index', ylab = 'Log2 Fold Change') # expr
plot(1:nrow(log2_fitn_expr_fold_change), log2_fitn_expr_fold_change[,3], main = 'Expression Fold Change Under Acid Stress', xlab = 'Gene Index', ylab = 'Log2 Fold Change') # expr
which(expr_fold_change < 1)
expr_fold_change[which(expr_fold_change < 1)]
log2(expr_fold_change[which(expr_fold_change < 1)])
log2(as.numeric(expr_fold_change[which(expr_fold_change < 1)]))
log2(1)
log2(0.9)
which(near(0, log2_fitn_expr_fold_change[,3], tol = 1))
which(near(0, log2_fitn_expr_fold_change[1,3], tol = 1))
which(near(0, as.numeric(log2_fitn_expr_fold_change[,3]), tol = 1))
which(near(0, as.numeric(log2_fitn_expr_fold_change[,3]), tol = 0.5))
which(near(1, as.numeric(fitn_expr_fold_change[,3]), tol = 0.1))
which(near(1, as.numeric(fitn_expr_fold_change[,3]), tol = 0.5))
plot(fitn_expr_fold_change[,2], fitn_expr_fold_change[,3])
plot(fitn_expr_fold_change[,2], fitn_expr_fold_change[,3], main = 'Fitness and Expression Change', xlab = 'Expression Fold Change', ylab = 'Fitness Fold Change')
plot(fitn_expr_fold_change[,2], fitn_expr_fold_change[,3], main = 'Fitness and Expression Change', xlab = 'Fitness Fold Change', ylab = 'Expression Fold Change')
plot(log2_fitn_expr_fold_change[,2], log2_fitn_expr_fold_change[,3], main = 'Fitness and Expression Change', xlab = 'Log2 Fitness Fold Change', ylab = 'Log2 Expression Fold Change')
plot(fitn_expr_fold_change[,2], fitn_expr_fold_change[,3], main = 'Fitness and Expression Change', xlab = 'Fitness Fold Change', ylab = 'Expression Fold Change')
plot(log2_fitn_expr_fold_change[,2], log2_fitn_expr_fold_change[,3], main = 'Fitness and Expression Change', xlab = 'Log2 Fitness Fold Change', ylab = 'Log2 Expression Fold Change')
plot(1:nrow(log2_fitn_expr_fold_change), log2_fitn_expr_fold_change[,2], main = 'Fitness Fold Change Under Mild Nutrient Stress', xlab = 'Gene Index', ylab = 'Log2 Fold Change') # fitness
plot(1:nrow(log2_fitn_expr_fold_change), fitn_expr_fold_change[,3], main = 'Expression Fold Change Under Acid Stress', xlab = 'Gene Index', ylab = 'Log2 Fold Change') # expr
plot(1:nrow(log2_fitn_expr_fold_change), log2_fitn_expr_fold_change[,2], main = 'Fitness Fold Change Under Mild Nutrient Stress', xlab = 'Gene Index', ylab = 'Log2 Fold Change') # fitness
plot(1:nrow(log2_fitn_expr_fold_change), fitn_expr_fold_change[,3], main = 'Expression Fold Change Under Acid Stress', xlab = 'Gene Index', ylab = 'Log2 Fold Change') # expr
plot(1:nrow(log2_fitn_expr_fold_change), log2_fitn_expr_fold_change[,3], main = 'Expression Fold Change Under Acid Stress', xlab = 'Gene Index', ylab = 'Log2 Fold Change') # expr
source('~/GitHub/PathwayMining/main.R')
composition <- find_set_list_composition(clean_mutans_g1_set, clean_mutans_g0_set)
composition
composition_size <- matrix(data = 0, nrow = length(composition), ncol = 1)
for (i in 1:length(composition)){
composition_size[i] <- length(composition[[i]])
}
composition_size[241]
composition_size[240]
composition_size[239]
composing_sets <- which(composition_size > 1)
print(intersect(composing_sets, gene_map))
composition_size <- matrix(data = 0, nrow = length(composition), ncol = 1)
for (i in 1:length(composition)){
composition_size[i] <- length(composition[[i]])
}
composing_sets <- which(composition_size > 1)
sets_of_interest <- intersect(composing_sets, gene_map)
genes_idxs_of_special_interest <- which(gene_map %in% sets_of_interest)
length(genes_idxs_of_special_interest)
length(sets_of_interest)
sets_of_interest
composition_size <- matrix(data = 0, nrow = length(composition), ncol = 1)
for (i in 1:length(composition)){
composition_size[i] <- length(composition[[i]])
}
composing_sets <- which(composition_size > 1)
sets_of_interest <- intersect(composing_sets, gene_map)
gene_idxs_of_special_interest <- which(gene_map %in% sets_of_interest)
gene_idxs_of_special_interest
dim(gene_map)
which(near(as.numeric(Baker_UA159ss_pH7_Glucose_Shock$`Fold Change`), 1, tol = 0.1))
which(near(as.numeric(Baker_UA159ss_pH7_Glucose_Shock$`Fold Change`), 1, tol = 0.5))
source('~/GitHub/PathwayMining/main.R')
plot(1:nrow(log2_fitn_expr_fold_change), log2_fitn_expr_fold_change[,3], main = 'Expression Fold Change Under Acid Stress', xlab = 'Gene Index', ylab = 'Log2 Fold Change') # expr
plot(log2_fitn_expr_fold_change[,2], log2_fitn_expr_fold_change[,3], main = 'Fitness and Expression Change', xlab = 'Log2 Fitness Fold Change', ylab = 'Log2 Expression Fold Change')
source('~/GitHub/PathwayMining/scripts/mutans_fitn_expr_analysis.R')
mutans
?lethal
?doubleGeneDel
genes <- mutans@allGenes
doubleGeneDel(mutans, genes[1], genes[2])
dblGeneDels <- doubleGeneDel(mutans, genes[1], genes[2])
dblGeneDels
dblGeneDels <- doubleGeneDel(mutans)
dblGeneDels
dblGeneDels@hasEffect
setwd("~/GitHub/PathwayMining/data/mutans_model")
source('~/GitHub/PathwayMining/load_mod.R')
mutans_obj <- get_mutans_model_w_obj()
dblGeneDels <- doubleGeneDel(mutans_obj)
mutans_obj
mutans_obj@react_name[477]
mutans_obj@obj_coef
mutans_model <- readTSVmod(reactList = "mutans_model_test.csv", metList = "mutans_model_met.csv")
mutans_model@met_name[401] <- "DAP-type peptidoglycan"
mutans_model@met_name[422] <- "Lys-type peptidoglycan"
mutans_model@obj
source('~/GitHub/PathwayMining/load_mod.R')
mutans_obj <- get_mutans_model_w_obj()
mutans_obj
mutans_obj <- get_mutans_model_w_obj()
dblGeneDels <- doubleGeneDel(mutans_obj)
dblGeneDels@fluxdels
dblGeneDels@dels
mutans_obj
dblGeneDels <- doubleGeneDel(mutans_obj, mutans_obj@allGenes, mutans_obj@allGenes)
dblGeneDels@alg_par
dblGeneDels@hasEffect
dblGeneDels@mod_id
dblGeneDels@fldind
dblGeneDels@fluxdels
dblGeneDels@fluxdist
dblGeneDels@fluxdist
dblGeneDels@fluxdels
dblGeneDels@chlb
dblGeneDels@chub
dblGeneDels <- doubleGeneDel(mutans_obj, mutans_obj@allGenes, mutans_obj@allGenes, allComb = TRUE)
dblGeneDels@dels
setwd("~/GitHub/PathwayMining/data/mutans_model")
save(dblGeneDels, file = 'mutans_doubleGeneDels.RData')
effect <- which(dblGeneDels@hasEffect)
effect
dblGeneDels@dels[effect,]
dblGeneDels@obj_func
dblGeneDels@obj_coef
dblGeneDels@fluxdels
effect <- which(dblGeneDels@hasEffect)
synth_lethal_pairs <- dblGeneDels@dels[effect,]
captured_pairs <- matrix(data = FALSE, nrow = nrow(synth_lethal_pairs), ncol = 1)
for (i in 1:length(synth_lethal_pairs)){
set1 <- get_set_idx(synth_lethal_pairs[i, 1], clean_mutans_g1_set)
set2 <- get_set_idx(synth_lethal_pairs[i, 2], clean_mutans_g1_set)
if (set1 == set2){captured_pairs[i] <- TRUE}
}
for (i in 1:length(synth_lethal_pairs)){
set1 <- get_set_idx(synth_lethal_pairs[i, 1], clean_mutans_g1_set)
set2 <- get_set_idx(synth_lethal_pairs[i, 2], clean_mutans_g1_set)
if (length(set1) > 0 & length(set2) > 0){
if (set1 == set2){captured_pairs[i] <- TRUE}
}
}
for (i in 1:nrow(synth_lethal_pairs)){
set1 <- get_set_idx(synth_lethal_pairs[i, 1], clean_mutans_g1_set)
set2 <- get_set_idx(synth_lethal_pairs[i, 2], clean_mutans_g1_set)
if (length(set1) > 0 & length(set2) > 0){
if (set1 == set2){captured_pairs[i] <- TRUE}
}
}
length(which(captured_pairs))
length(synth_lethal_pairs)
216/72492
